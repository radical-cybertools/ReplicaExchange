#######################################################
# basic simulation options for replica exchange
#######################################################

structure       alanin.psf
coordinates     alanin.pdb

margin          10.0
stepspercycle   1000
parameters      alanin.params
exclude         scaled1-4
1-4scaling      0.4
switching       on
switchdist      7.0
cutoff          8.0
pairlistdist    10.0

langevin on
langevinDamping 10.0

set steps_per_run   1000
set replica_id      3
timestep            1.0

set job_output_root new_output_3_
set underscore  "_"
set history ".history"

#set old_output_root old_output

set num_runs        2

set runs_per_frame  1
firsttimestep       0

#set cycle           [expr $i_run+1]
set cycle           0
set doswap          0

set OLDTEMP         243.00
set NEWTEMP         243.00

if {[info exists restart_root]} { #restart
  set restart_root [format $restart_root $replica_id]
  source $restart_root.$replica_id.tcl
} else {
  set i_run 0
  set i_step 0
  if {[info exists first_timestep]} {
    set i_step $first_timestep
  }
}

while {$i_run < $num_runs} {


if {$i_run} { #restart
  bincoordinates $restart_root.$replica_id.coor
  binvelocities $restart_root.$replica_id.vel
  extendedSystem $restart_root.$replica_id.xsc
} else {
  temperature $NEWTEMP
}

outputEnergies [expr ($steps_per_run / 100)]
dcdFreq [expr ($steps_per_run)]


set outputname $job_output_root$cycle$underscore$i_run
outputName $outputname



if { $doswap } {
  langevinTemp        $NEWTEMP
  rescalevels [expr sqrt(1.0*$NEWTEMP/$OLDTEMP)]
} else {
  langevinTemp        $NEWTEMP
}

proc save_callback {labels values} {
  global saved_labels saved_values
  set saved_labels $labels
  set saved_values $values
}
callback save_callback

proc save_array {} {
  global saved_labels saved_values saved_array
  foreach label $saved_labels value $saved_values {
    set saved_array($label) $value
  }
}

set history_file [open [format $outputname$history] "w"]
fconfigure $history_file -buffering line

run $steps_per_run
save_array

set TEMP $saved_array(TEMP)
set POTENTIAL [expr $saved_array(TOTAL) - $saved_array(KINETIC)]

puts $history_file "$NEWTEMP $POTENTIAL"

incr i_run

  if {$i_run} {  # restart
    set restart_root "$job_output_root.restart$i_run"
    output [format $restart_root.$replica_id $replica_id]
  }


}